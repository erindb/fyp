/*

## Question

How do people generate stories from events?

## Generative Model

* Have a stochastic transition network where
some events are more probable than others

* Sample event chains from this network:
That's what happened.

* Generate stories from these chains using a
story generator

## Story generator

BasicModel:
Just comment on a subset of what happened.

DumbInformativityModel:
P(mention | happen) depends on probability of event.

InformativityModel:
P(mention | happen) depends on predictability of event given context.

## Another (future) question

If we know how people's choices of what events to mention
is biased, can we interpret their stories better?

## Related ideas...

A thought: I like to think of explanations as stories whose
conclusion is the thing you want to explain.
So understanding the kinds of informativity constraints
on what should go into a story could help understand a bit
more about how explanations work...? And vice versa?

*/

// levels get progressively less easy
var easiness = { 1: 0.8, 2: 0.5, 3: 0.2 };
var levels = easiness.keys;

// can change the length of the game:
var highestLevel = 2;

var increaseBoredom = function(boredom) {
	return boredom + 0.2;
}

var videoGameTransition = function(sequence, state) {
	if (state.type == 'stop') {
		var description = 'Anna stops playing';
		return sequence.concat([description]);
	} else if (state.type == 'play') {
		var description = 'Anna plays level ' + state.level + '.';
		var outcome = flip(easiness[state.level]) ? 'win' : 'lose';
		return videoGameTransition(
			sequence.concat([description]),
			_.extend(state, {type: outcome, boredom: increaseBoredom(state.boredom)})
		)
	} else if (state.type == 'win') {
		if (state.level == highestLevel) {
			var description = 'Anna wins the game.';
			return videoGameTransition(
				sequence.concat([description]),
				_.extend(state, {type: 'stop'})
			)
		} else {
			var description = 'Anna wins level ' + state.level + '.';
			var nextAction = flip(state.boredom) ? 'bored' : 'play';
			// Anna progresses to next level if she wins
			var nextLevel = state.level + 1;
			return videoGameTransition(
				sequence.concat([description]),
				_.extend(state, {type: nextAction, level: nextLevel})
			)
		}
	} else if (state.type == 'lose') {
		var description = 'Anna loses level ' + state.level + '.';
		var nextAction = flip(state.boredom) ? 'bored' : 'play';
		// Anna goes to level 1 when she loses any level
		var nextLevel = 1;
		return videoGameTransition(
			sequence.concat([description]),
			_.extend(state, {type: nextAction, level: nextLevel})
		)
	} else if (state.type == 'bored') {
		var description = 'Anna gets bored.';
		return videoGameTransition(
			sequence.concat([description]),
			_.extend(state, {type: 'stop'})
		)
	}
}

var videoGame = function() {
	return videoGameTransition([], {type: 'play', level: 1, boredom: 0});
}

var isSubsequence = function(sub, full) {
	var fullstr = full.join('');
	var substr = sub.join('.*');
	return regex.match(substr, fullstr) != null;
}

var literalSequenceFinder = function (subsequence) {
	Rejection(function() {
		var fullSequence = videoGame();
		condition( isSubsequence(subsequence, fullSequence) )
		return fullSequence;
	}, 100)
}

// display(videoGame())
// display(videoGame())
// display(videoGame())

// display(literalSequenceFinder(['Anna gets bored.']))

display(
	'true? ' + 
	isSubsequence(['A', 'B', 'C'], ['D', 'A', 'E', 'F', 'B', 'G', 'C', 'H', 'I', 'J']));
display(
	'true? ' + 
	isSubsequence(['A', 'B', 'C'], ['D', 'B', 'A', 'E', 'F', 'B', 'G', 'B', 'C', 'H', 'I', 'J']));
display(
	'false? ' + 
	isSubsequence(['A', 'B', 'C'], ['D', 'A', 'E', 'F', 'C', 'H', 'I', 'J']));

/*
My intuition:
An informativity-based storytelling model (InformativityModel)
	* will not talk about what level Anna plays,
	* will talk about the *last* level Anna won (or lost?)
	* will mention if Anna is bored, or if she wins the game
A probability-based (DumbInformativityModel) model
	* might not mention if Anna gets bored, since that's likely to happen?
	* might be likely to mention that Anna played level 2?
*/

'finished'